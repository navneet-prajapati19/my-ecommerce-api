services:
  postgres:
    image: postgres:15.3
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - internal-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=password
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080" # Expose Keycloak on 8181 to avoid conflict with our app on 8080
    depends_on:
      - postgres
    networks:
      - internal-net
    restart: always

  spring-boot-app:
    build: .
    container_name: spring-boot-app
    depends_on:
      - keycloak
    ports:
      - "8080:8080"
    environment:
      # --- Database Config ---
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb # Using in-memory H2 for simplicity
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      # --- Keycloak Integration ---
      # For Spring Security (Resource Server)
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/my-realm
      # For Keycloak Admin Client (to create users)
      - KEYCLOAK_ADMIN_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN_REALM=master
      - KEYCLOAK_ADMIN_CLIENT_ID=admin-cli
      - KEYCLOAK_ADMIN_USERNAME=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # --- Our App's Keycloak Client Info ---
      - APP_KEYCLOAK_REALM=my-realm
      - APP_KEYCLOAK_CLIENT_ID=my-spring-boot-client
      - APP_KEYCLOAK_CLIENT_SECRET= # Keep this secret! You'll get it from Keycloak UI
    networks:
      - internal-net
volumes:
  postgres_data:
networks:
  internal-net:
    driver: bridge